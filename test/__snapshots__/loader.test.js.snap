// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`loader should be different modules id: errors 1`] = `Array []`;

exports[`loader should be different modules id: result 1`] = `
Object {
  "ExposeLoader": Object {
    "default": Object {
      "default": [Function],
      "globalObject6": Object {
        "foo": "bar",
      },
      "globalObject7": Object {
        "bar": "foo",
      },
    },
  },
  "myGlobal_alias": Object {
    "default": Object {
      "default": [Function],
      "globalObject6": Object {
        "foo": "bar",
      },
      "globalObject7": Object {
        "bar": "foo",
      },
    },
  },
}
`;

exports[`loader should be different modules id: warnings 1`] = `Array []`;

exports[`loader should emit error because of invalid arguments: errors 1`] = `
Array [
  "ModuleBuildError: Module build failed (from \`replaced original path\`):
Error: Invalid command \\"\\" in \\"myGlobal_alias  |  globalObject6\\" for expose. There must be only one separator: \\" \\", or \\"|\\".",
]
`;

exports[`loader should emit error because of invalid arguments: warnings 1`] = `Array []`;

exports[`loader should emit error because of many arguments: errors 1`] = `
Array [
  "ModuleBuildError: Module build failed (from \`replaced original path\`):
Error: Invalid \\"myGlobal_alias globalObject6 excessArgument\\" for exposes",
]
`;

exports[`loader should emit error because of many arguments: warnings 1`] = `Array []`;

exports[`loader should match hashes on all operating systems: errors 1`] = `Array []`;

exports[`loader should match hashes on all operating systems: module 1`] = `
"var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./simple-commonjs2-single-export.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"] = ___EXPOSE_LOADER_IMPORT___;

module.exports = ___EXPOSE_LOADER_IMPORT___"
`;

exports[`loader should match hashes on all operating systems: warnings 1`] = `Array []`;

exports[`loader should work for a nested property for a global object: errors 1`] = `Array []`;

exports[`loader should work for a nested property for a global object: module 1`] = `
"var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./global-commonjs2-single-export.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"][\\"nested\\"] = ___EXPOSE_LOADER_IMPORT___;

module.exports = ___EXPOSE_LOADER_IMPORT___"
`;

exports[`loader should work for a nested property for a global object: result 1`] = `
Object {
  "ExposeLoader": Object {
    "foo": "bar",
  },
  "myGlobal": Object {
    "nested": Object {
      "foo": "bar",
    },
  },
}
`;

exports[`loader should work for a nested property for a global object: warnings 1`] = `Array []`;

exports[`loader should work for nested properties for a global object: errors 1`] = `Array []`;

exports[`loader should work for nested properties for a global object: module 1`] = `
"var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./global-commonjs2-single-export.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"][\\"nested\\"] = ___EXPOSE_LOADER_IMPORT___;
var ___EXPOSE_LOADER_IMPORT_NAMED___ = ___EXPOSE_LOADER_IMPORT___.foo
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myOtherGlobal\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myOtherGlobal\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myOtherGlobal\\"][\\"nested\\"] = ___EXPOSE_LOADER_IMPORT_NAMED___;

module.exports = ___EXPOSE_LOADER_IMPORT___"
`;

exports[`loader should work for nested properties for a global object: result 1`] = `
Object {
  "ExposeLoader": Object {
    "foo": "bar",
  },
  "myGlobal": Object {
    "nested": Object {
      "foo": "bar",
    },
  },
  "myOtherGlobal": Object {
    "nested": "bar",
  },
}
`;

exports[`loader should work for nested properties for a global object: warnings 1`] = `Array []`;

exports[`loader should work from esModule export: errors 1`] = `Array []`;

exports[`loader should work from esModule export: module 1`] = `
"var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./global-module-default-export.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"] = ___EXPOSE_LOADER_IMPORT___;

module.exports = ___EXPOSE_LOADER_IMPORT___"
`;

exports[`loader should work from esModule export: result 1`] = `
Object {
  "ExposeLoader": Object {
    "default": Object {
      "foo": "bar",
    },
  },
  "myGlobal": Object {
    "default": Object {
      "foo": "bar",
    },
  },
}
`;

exports[`loader should work from esModule export: warnings 1`] = `Array []`;

exports[`loader should work inline 1: errors 1`] = `Array []`;

exports[`loader should work inline 1: module 1`] = `
"function getAddress() {
  return {
    city: 'Tokyo'
  };
}

const address = getAddress();
const myExports = address === null || address === void 0 ? void 0 : address.city;
export default myExports;
var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./../../node_modules/babel-loader/lib/index.js!./custom.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
var ___EXPOSE_LOADER_IMPORT_NAMED___ = ___EXPOSE_LOADER_IMPORT___.default
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"] = ___EXPOSE_LOADER_IMPORT_NAMED___;
"
`;

exports[`loader should work inline 1: result 1`] = `
Object {
  "ExposeLoader": Object {
    "default": "Tokyo",
  },
  "myGlobal": "Tokyo",
}
`;

exports[`loader should work inline 1: warnings 1`] = `Array []`;

exports[`loader should work inline 2: errors 1`] = `Array []`;

exports[`loader should work inline 2: module 1`] = `
"var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./simple-commonjs2-single-export.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"] = ___EXPOSE_LOADER_IMPORT___;

module.exports = ___EXPOSE_LOADER_IMPORT___"
`;

exports[`loader should work inline 2: result 1`] = `
Object {
  "ExposeLoader": Object {
    "myExports": Object {
      "foo": "bar",
    },
    "myExports2": Object {
      "globalObject2": Object {
        "foo": "bar",
      },
      "globalObject3": Object {
        "bar": "foo",
      },
    },
  },
  "myGlobal": Object {
    "foo": "bar",
  },
  "myOtherGlobal": Object {
    "globalObject2": Object {
      "foo": "bar",
    },
    "globalObject3": Object {
      "bar": "foo",
    },
  },
}
`;

exports[`loader should work inline 2: warnings 1`] = `Array []`;

exports[`loader should work interpolate: errors 1`] = `Array []`;

exports[`loader should work interpolate: module 1`] = `
"var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./global-commonjs2-single-export.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
___EXPOSE_LOADER_GLOBAL_THIS___[\\"global-commonjs2-single-export\\"] = ___EXPOSE_LOADER_IMPORT___;
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"][\\"global-commonjs2-single-export\\"] = ___EXPOSE_LOADER_IMPORT___;

module.exports = ___EXPOSE_LOADER_IMPORT___"
`;

exports[`loader should work interpolate: result 1`] = `
Object {
  "ExposeLoader": Object {
    "foo": "bar",
  },
  "global-commonjs2-single-export": Object {
    "foo": "bar",
  },
  "myGlobal": Object {
    "global-commonjs2-single-export": Object {
      "foo": "bar",
    },
  },
}
`;

exports[`loader should work interpolate: warnings 1`] = `Array []`;

exports[`loader should work multiple commonjs exports: errors 1`] = `Array []`;

exports[`loader should work multiple commonjs exports: module 1`] = `
"var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./global-commonjs2-multiple-exports.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myOtherGlobal\\"] = ___EXPOSE_LOADER_IMPORT___;
var ___EXPOSE_LOADER_IMPORT_NAMED___ = ___EXPOSE_LOADER_IMPORT___.globalObject2
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"][\\"globalObject2\\"] = ___EXPOSE_LOADER_IMPORT_NAMED___;

module.exports = ___EXPOSE_LOADER_IMPORT___"
`;

exports[`loader should work multiple commonjs exports: result 1`] = `
Object {
  "ExposeLoader": Object {
    "globalObject2": Object {
      "foo": "bar",
    },
    "globalObject3": Object {
      "bar": "foo",
    },
  },
  "myGlobal": Object {
    "globalObject2": Object {
      "foo": "bar",
    },
  },
  "myOtherGlobal": Object {
    "globalObject2": Object {
      "foo": "bar",
    },
    "globalObject3": Object {
      "bar": "foo",
    },
  },
}
`;

exports[`loader should work multiple commonjs exports: warnings 1`] = `Array []`;

exports[`loader should work multiple name from one package: errors 1`] = `Array []`;

exports[`loader should work multiple name from one package: module 1`] = `
"var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./global-commonjs2-single-export.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myOtherGlobal\\"] = ___EXPOSE_LOADER_IMPORT___;
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"] = ___EXPOSE_LOADER_IMPORT___;

module.exports = ___EXPOSE_LOADER_IMPORT___"
`;

exports[`loader should work multiple name from one package: result 1`] = `
Object {
  "ExposeLoader": Object {
    "foo": "bar",
  },
  "myGlobal": Object {
    "foo": "bar",
  },
  "myOtherGlobal": Object {
    "foo": "bar",
  },
}
`;

exports[`loader should work multiple name from one package: warnings 1`] = `Array []`;

exports[`loader should work multiple syntax to array: errors 1`] = `Array []`;

exports[`loader should work multiple syntax to array: module 1`] = `
"var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./global-module-named-exports.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
var ___EXPOSE_LOADER_IMPORT_NAMED___ = ___EXPOSE_LOADER_IMPORT___.globalObject6
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"][\\"globalObject6\\"] = ___EXPOSE_LOADER_IMPORT_NAMED___;
var ___EXPOSE_LOADER_IMPORT_NAMED___ = ___EXPOSE_LOADER_IMPORT___.globalObject7
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"][\\"globalObject7\\"] = ___EXPOSE_LOADER_IMPORT_NAMED___;
var ___EXPOSE_LOADER_IMPORT_NAMED___ = ___EXPOSE_LOADER_IMPORT___.default
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"][\\"default\\"] = ___EXPOSE_LOADER_IMPORT_NAMED___;

module.exports = ___EXPOSE_LOADER_IMPORT___"
`;

exports[`loader should work multiple syntax to array: result 1`] = `
Object {
  "ExposeLoader": Object {
    "default": Object {
      "default": [Function],
      "globalObject6": Object {
        "foo": "bar",
      },
      "globalObject7": Object {
        "bar": "foo",
      },
    },
  },
  "myGlobal_alias": Object {
    "default": [Function],
    "globalObject6": Object {
      "foo": "bar",
    },
    "globalObject7": Object {
      "bar": "foo",
    },
  },
}
`;

exports[`loader should work multiple syntax to array: warnings 1`] = `Array []`;

exports[`loader should work object config: errors 1`] = `Array []`;

exports[`loader should work object config: module 1`] = `
"var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./global-module-named-exports.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
var ___EXPOSE_LOADER_IMPORT_NAMED___ = ___EXPOSE_LOADER_IMPORT___.globalObject6
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal.alias\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal.alias\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal.alias\\"][\\"globalObject6\\"] = ___EXPOSE_LOADER_IMPORT_NAMED___;

module.exports = ___EXPOSE_LOADER_IMPORT___"
`;

exports[`loader should work object config: result 1`] = `
Object {
  "ExposeLoader": Object {
    "default": Object {
      "default": [Function],
      "globalObject6": Object {
        "foo": "bar",
      },
      "globalObject7": Object {
        "bar": "foo",
      },
    },
  },
  "myGlobal.alias": Object {
    "globalObject6": Object {
      "foo": "bar",
    },
  },
}
`;

exports[`loader should work object config: warnings 1`] = `Array []`;

exports[`loader should work string config 2: errors 1`] = `Array []`;

exports[`loader should work string config 2: module 1`] = `
"var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./global-module-named-exports.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
var ___EXPOSE_LOADER_IMPORT_NAMED___ = ___EXPOSE_LOADER_IMPORT___.globalObject6
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"][\\"globalObject6\\"] = ___EXPOSE_LOADER_IMPORT_NAMED___;
var ___EXPOSE_LOADER_IMPORT_NAMED___ = ___EXPOSE_LOADER_IMPORT___.globalObject7
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"][\\"globalObject7\\"] = ___EXPOSE_LOADER_IMPORT_NAMED___;
var ___EXPOSE_LOADER_IMPORT_NAMED___ = ___EXPOSE_LOADER_IMPORT___.default
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"][\\"default\\"] = ___EXPOSE_LOADER_IMPORT_NAMED___;
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"] = ___EXPOSE_LOADER_IMPORT___;
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myOtherGlobal\\"] = ___EXPOSE_LOADER_IMPORT___;

module.exports = ___EXPOSE_LOADER_IMPORT___"
`;

exports[`loader should work string config 2: result 1`] = `
Object {
  "ExposeLoader": Object {
    "default": Object {
      "default": [Function],
      "globalObject6": Object {
        "foo": "bar",
      },
      "globalObject7": Object {
        "bar": "foo",
      },
    },
  },
  "myGlobal": Object {
    "default": [Function],
    "globalObject6": Object {
      "foo": "bar",
    },
    "globalObject7": Object {
      "bar": "foo",
    },
  },
  "myGlobal_alias": Object {
    "default": [Function],
    "globalObject6": Object {
      "foo": "bar",
    },
    "globalObject7": Object {
      "bar": "foo",
    },
  },
  "myOtherGlobal": Object {
    "default": [Function],
    "globalObject6": Object {
      "foo": "bar",
    },
    "globalObject7": Object {
      "bar": "foo",
    },
  },
}
`;

exports[`loader should work string config 2: warnings 1`] = `Array []`;

exports[`loader should work string config: errors 1`] = `Array []`;

exports[`loader should work string config: module 1`] = `
"var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./global-module-named-exports.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
var ___EXPOSE_LOADER_IMPORT_NAMED___ = ___EXPOSE_LOADER_IMPORT___.globalObject6
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"][\\"globalObject6\\"] = ___EXPOSE_LOADER_IMPORT_NAMED___;
var ___EXPOSE_LOADER_IMPORT_NAMED___ = ___EXPOSE_LOADER_IMPORT___.globalObject7
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"][\\"globalObject7\\"] = ___EXPOSE_LOADER_IMPORT_NAMED___;
var ___EXPOSE_LOADER_IMPORT_NAMED___ = ___EXPOSE_LOADER_IMPORT___.default
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"][\\"default\\"] = ___EXPOSE_LOADER_IMPORT_NAMED___;
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"] = ___EXPOSE_LOADER_IMPORT___;
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myOtherGlobal\\"] = ___EXPOSE_LOADER_IMPORT___;

module.exports = ___EXPOSE_LOADER_IMPORT___"
`;

exports[`loader should work string config: result 1`] = `
Object {
  "ExposeLoader": Object {
    "default": Object {
      "default": [Function],
      "globalObject6": Object {
        "foo": "bar",
      },
      "globalObject7": Object {
        "bar": "foo",
      },
    },
  },
  "myGlobal": Object {
    "default": [Function],
    "globalObject6": Object {
      "foo": "bar",
    },
    "globalObject7": Object {
      "bar": "foo",
    },
  },
  "myGlobal_alias": Object {
    "default": [Function],
    "globalObject6": Object {
      "foo": "bar",
    },
    "globalObject7": Object {
      "bar": "foo",
    },
  },
  "myOtherGlobal": Object {
    "default": [Function],
    "globalObject6": Object {
      "foo": "bar",
    },
    "globalObject7": Object {
      "bar": "foo",
    },
  },
}
`;

exports[`loader should work string config: warnings 1`] = `Array []`;

exports[`loader should work with multiple exposes: errors 1`] = `Array []`;

exports[`loader should work with multiple exposes: module 1`] = `
"var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./global-commonjs2-single-export.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"] = ___EXPOSE_LOADER_IMPORT___;
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myOtherGlobal\\"] = ___EXPOSE_LOADER_IMPORT___;

module.exports = ___EXPOSE_LOADER_IMPORT___"
`;

exports[`loader should work with multiple exposes: result 1`] = `
Object {
  "ExposeLoader": Object {
    "foo": "bar",
  },
  "myGlobal": Object {
    "foo": "bar",
  },
  "myOtherGlobal": Object {
    "foo": "bar",
  },
}
`;

exports[`loader should work with multiple exposes: warnings 1`] = `Array []`;

exports[`loader should work: errors 1`] = `Array []`;

exports[`loader should work: module 1`] = `
"var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./global-commonjs2-single-export.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"] = ___EXPOSE_LOADER_IMPORT___;

module.exports = ___EXPOSE_LOADER_IMPORT___"
`;

exports[`loader should work: result 1`] = `
Object {
  "ExposeLoader": Object {
    "foo": "bar",
  },
  "myGlobal": Object {
    "foo": "bar",
  },
}
`;

exports[`loader should work: warnings 1`] = `Array []`;
