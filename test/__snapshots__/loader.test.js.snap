// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`loader should work for a nested property for a global object: errors 1`] = `Array []`;

exports[`loader should work for a nested property for a global object: module 1`] = `
"const globalObject4 = { foo: 'bar' };

module.exports = globalObject4;

var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./global-commonjs2-single-export.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"][\\"nested\\"] = ___EXPOSE_LOADER_IMPORT___;
"
`;

exports[`loader should work for a nested property for a global object: result 1`] = `
Object {
  "ExposeLoader": Object {
    "foo": "bar",
  },
  "myGlobal": Object {
    "nested": Object {
      "foo": "bar",
    },
  },
}
`;

exports[`loader should work for a nested property for a global object: warnings 1`] = `Array []`;

exports[`loader should work for nested properties for a global object: errors 1`] = `Array []`;

exports[`loader should work for nested properties for a global object: module 1`] = `
"const globalObject4 = { foo: 'bar' };

module.exports = globalObject4;

var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./global-commonjs2-single-export.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"][\\"nested\\"] = ___EXPOSE_LOADER_IMPORT___;
var ___EXPOSE_LOADER_IMPORT_NAMED___ = ___EXPOSE_LOADER_IMPORT___.foo
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myOtherGlobal\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myOtherGlobal\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myOtherGlobal\\"][\\"nested\\"] = ___EXPOSE_LOADER_IMPORT_NAMED___;
"
`;

exports[`loader should work for nested properties for a global object: result 1`] = `
Object {
  "ExposeLoader": Object {
    "foo": "bar",
  },
  "myGlobal": Object {
    "nested": Object {
      "foo": "bar",
    },
  },
  "myOtherGlobal": Object {
    "nested": "bar",
  },
}
`;

exports[`loader should work for nested properties for a global object: warnings 1`] = `Array []`;

exports[`loader should work from esModule export: errors 1`] = `Array []`;

exports[`loader should work from esModule export: module 1`] = `
"const globalObject5 = { foo: 'bar' };

export default globalObject5;

var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./global-module-default-export.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"] = ___EXPOSE_LOADER_IMPORT___;
"
`;

exports[`loader should work from esModule export: result 1`] = `
Object {
  "ExposeLoader": Object {
    "default": Object {
      "foo": "bar",
    },
  },
  "myGlobal": Object {
    "default": Object {
      "foo": "bar",
    },
  },
}
`;

exports[`loader should work from esModule export: warnings 1`] = `Array []`;

exports[`loader should work string config: errors 1`] = `Array []`;

exports[`loader should work string config: module 1`] = `
"const globalObject6 = { foo: 'bar' };
const globalObject7 = { bar: 'foo' };

export default function globalDef(){
  return { bar: 'foo' };
};

export { globalObject6, globalObject7 };

var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./global-module-named-exports.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
var ___EXPOSE_LOADER_IMPORT_NAMED___ = ___EXPOSE_LOADER_IMPORT___.globalObject6
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"][\\"globalObject6\\"] = ___EXPOSE_LOADER_IMPORT_NAMED___;
var ___EXPOSE_LOADER_IMPORT_NAMED___ = ___EXPOSE_LOADER_IMPORT___.globalObject7
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"][\\"globalObject7\\"] = ___EXPOSE_LOADER_IMPORT_NAMED___;
var ___EXPOSE_LOADER_IMPORT_NAMED___ = ___EXPOSE_LOADER_IMPORT___.default
if (!___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"]) ___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"] = {};
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal_alias\\"][\\"default\\"] = ___EXPOSE_LOADER_IMPORT_NAMED___;
"
`;

exports[`loader should work string config: result 1`] = `
Object {
  "ExposeLoader": Object {
    "default": Object {
      "default": [Function],
      "globalObject6": Object {
        "foo": "bar",
      },
      "globalObject7": Object {
        "bar": "foo",
      },
    },
  },
  "myGlobal_alias": Object {
    "default": [Function],
    "globalObject6": Object {
      "foo": "bar",
    },
    "globalObject7": Object {
      "bar": "foo",
    },
  },
}
`;

exports[`loader should work string config: warnings 1`] = `Array []`;

exports[`loader should work with multiple exposes: errors 1`] = `Array []`;

exports[`loader should work with multiple exposes: module 1`] = `
"const globalObject4 = { foo: 'bar' };

module.exports = globalObject4;

var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./global-commonjs2-single-export.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"] = ___EXPOSE_LOADER_IMPORT___;
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myOtherGlobal\\"] = ___EXPOSE_LOADER_IMPORT___;
"
`;

exports[`loader should work with multiple exposes: result 1`] = `
Object {
  "ExposeLoader": Object {
    "foo": "bar",
  },
  "myGlobal": Object {
    "foo": "bar",
  },
  "myOtherGlobal": Object {
    "foo": "bar",
  },
}
`;

exports[`loader should work with multiple exposes: warnings 1`] = `Array []`;

exports[`loader should work: errors 1`] = `Array []`;

exports[`loader should work: module 1`] = `
"const globalObject4 = { foo: 'bar' };

module.exports = globalObject4;

var ___EXPOSE_LOADER_IMPORT___ = require(\\"-!./global-commonjs2-single-export.js\\");
var ___EXPOSE_LOADER_GET_GLOBAL_THIS___ = require(\\"../../src/runtime/getGlobalThis.js\\");
var ___EXPOSE_LOADER_GLOBAL_THIS___ = ___EXPOSE_LOADER_GET_GLOBAL_THIS___();
___EXPOSE_LOADER_GLOBAL_THIS___[\\"myGlobal\\"] = ___EXPOSE_LOADER_IMPORT___;
"
`;

exports[`loader should work: result 1`] = `
Object {
  "ExposeLoader": Object {
    "foo": "bar",
  },
  "myGlobal": Object {
    "foo": "bar",
  },
}
`;

exports[`loader should work: warnings 1`] = `Array []`;
